1) git init
Initialized empty Git repository in /home/kunal/git_practice/.git/

2) echo "Hello Git and GitHub" >> README.txt

3) git add README.txt

4) git status

5) git commit -m "First commit"

6) git add .

7) git log
commit 1b7df0cb6a2124f91e9714177d04893801cb59a9
Author: kunal.wadhwa <kunal.wadhwa@naukri.com>
Date:   Sat Nov 17 12:19:30 2018 +0530

    first commit

commit 7ee1eed94163642aebef473fd6bcd21daaae8ce7
Author: kunal.wadhwa <kunal.wadhwa@naukri.com>
Date:   Sat Nov 17 12:01:43 2018 +0530

    First commit

8) git remote add origin https://github.com/kunalwadhwa1991/git_practice.git

9) git push -u origin master

10) git config --global user.name "Your Name"
To set your name

11) git config --global user.email "name@domain.example"
To set your email address

12) git config --global --edit
To edit config file

git config --local --edit
git config --system --edit

13) ~/.gitconfig
To look at your git config file

14) .git/config
Local config is in repository's .git/config file

15) git config user.name "Your name"
To set your username for single repository


Backtrack commands

1) git show HEAD
To see the HEAD commit

2) git checkout HEAD filename
will restore the file in your working directory to look exactly as it did when you last made a commit

3) git reset HEAD filename
We can unstage that file from the staging area using above command.

This command resets the file in the staging area to be the same as the HEAD commit. It does not discard file changes from the working directory, it just removes them from the staging area.

4) git reset commit_SHA

This command works by using the first 7 characters of the SHA of a previous commit. For example, if the SHA of the previous commit is 5d692065cf51a2f50ea8e7b19b5a7ae512f633ba, use:
git reset 5d69206

HEAD is now set to that previous commit.

Let's take a moment to review the new commands:

git checkout HEAD filename: Discards changes in the working directory.
git reset HEAD filename: Unstages file changes in the staging area.
git reset commit_SHA: Resets to a previous commit in your commit history.

5) git add filename_1 filename_2
To add multiple files to the staging area with a single command



